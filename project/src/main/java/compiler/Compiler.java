/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package compiler;

import java.io.IOException;
import java.io.FileReader;

import compiler.Lexer.Lexer;
import compiler.Lexer.Symbol;
import compiler.Parser.Parser;
import compiler.Parser.ASTNode;



public class Compiler {
    public static void main(String[] args) {
        if (args.length != 2) {
            System.out.println("Usage: main.java -lexer <filepath>");
            return;
        }

        String mode = args[0];
        String filepath = args[1];

        if ("-lexer".equals(mode)) {
            try (FileReader reader = new FileReader(filepath)) {
                Lexer lexer = new Lexer(reader);
                Symbol token;
                while ((token = lexer.getNextSymbol()).getType() != Symbol.TokenType.EOF) {
                    System.out.println(token);
                }
            } catch (IOException e) {
                System.err.println("Error reading file: " + e.getMessage());
            }
        } else {
            System.out.println("Unknown mode: " + mode);
        }
        if("-parser".equals(mode)){
            try (FileReader reader = new FileReader(filepath)) {
                Lexer lexer = new Lexer(reader);
                Parser parser = new Parser(lexer);
                ASTNode node = parser.parseProgram();
                System.out.println(node);
            } catch (IOException e) {
                System.err.println("Error reading file: " + e.getMessage());
            }
        } else {
            System.out.println("Unknown mode: " + mode);
        }
    }
}
