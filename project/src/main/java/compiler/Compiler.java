/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package compiler;

import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Paths;

import compiler.Lexer.Lexer;
import compiler.Parser.ASTNode;
import compiler.Parser.Parser;
import compiler.Parser.Program;
import compiler.Semantic.SemanticAnalysis;
import compiler.CodeGen.CodeGen;

public class Compiler {
    public static void main(String[] args) {

        String srcPath = args[0];
        // default output class file
        String outPath = "Main.class";
        // scan for -o
        for (int i = 1; i < args.length; i++) {
            if ("-o".equals(args[i]) && i + 1 < args.length) {
                outPath = args[++i];
            }
        }
        try (FileReader reader = new FileReader(srcPath)) {
            Lexer lexer = new Lexer(reader);


            Parser parser = new Parser(lexer);
            ASTNode node = parser.parseProgram();

            // Perform sema// n// tic analysis
            SemanticAnalysis semanticAnalysis = new SemanticAnalysis();
            node.accept(semanticAnalysis);

            if (semanticAnalysis.hasErrors()) {
                System.err.println("Semantic errors found:");
                semanticAnalysis.printErrors();
                System.exit(2);
            } else {
                System.out.println("Semantic analysis completed successfully.");
                java.nio.file.Path parent = Paths.get(outPath).getParent();
                if (parent != null && !java.nio.file.Files.exists(parent)) {
                    java.nio.file.Files.createDirectories(parent);
                }
                // invoke your CodeGen
                new CodeGen((Program) node, outPath).generate();
                System.out.println("Code generation successful â†’ " + outPath);
                System.exit(0);
            }
        } catch (IOException e) {
            System.err.println("Error reading file: " + e.getMessage());
            e.printStackTrace(System.err);
            System.exit(1);
        }
    }
}












